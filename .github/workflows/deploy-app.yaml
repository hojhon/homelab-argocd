name: Deploy App (GitOps deployer)

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'Optional: the ArgoCD Application name to sync (cloudflared, hojhon-site-app, or root)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - 'cloudflared'
          - 'hojhon-site-app'
          - 'root'

jobs:
  deploy-changed-apps:
    runs-on: [self-hosted, dev-ops]
    environment: homelab-variables
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubeconfig
        run: |
          if [ -f "/home/github-runner/.kube/config" ]; then
            echo "KUBECONFIG=/home/github-runner/.kube/config" >> $GITHUB_ENV
          elif [ -f "/etc/rancher/k3s/k3s.yaml" ]; then
            cp /etc/rancher/k3s/k3s.yaml kubeconfig.yaml
            chmod 600 kubeconfig.yaml
            echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV
          else
            echo "No kubeconfig found on runner" >&2
            exit 1
          fi

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Find changed app directories (skipped for manual runs)
        id: changed
        run: |
          # For manual runs we accept an explicit 'app' input; otherwise this step is a no-op
          if [ -n "${{ github.event.inputs.app }}" ]; then
            echo "CHANGED_DIRS=${{ github.event.inputs.app }}" >> $GITHUB_OUTPUT
          else
            echo "CHANGED_DIRS=" >> $GITHUB_OUTPUT
          fi

      - name: Port-forward argocd-server
        run: |
          kubectl --kubeconfig="$KUBECONFIG" port-forward -n argocd svc/argocd-server 8080:443 --address 127.0.0.1 > /dev/null 2>&1 &
          PF_PID=$!
          for i in 1 2 3 4 5; do
            sleep 2
            if nc -z 127.0.0.1 8080 >/dev/null 2>&1; then
              break
            fi
          done

      - name: Login to ArgoCD
        run: |
          ADMIN_PW=$(kubectl --kubeconfig="$KUBECONFIG" -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' 2>/dev/null | base64 --decode || true)
          if [ -z "$ADMIN_PW" ]; then
            ADMIN_PW=${{ secrets.ARGOCD_ADMIN_PASSWORD }}
          fi
          if [ -z "$ADMIN_PW" ]; then
            echo "No ArgoCD admin password available" >&2
            kill $PF_PID || true
            exit 1
          fi
          argocd login 127.0.0.1:8080 --insecure --username admin --password "$ADMIN_PW"

      - name: Sync changed apps
        run: |
          set -e
          DIRS="${{ steps.changed.outputs.CHANGED_DIRS }}"
          echo "Changed dirs: $DIRS"
          for d in $DIRS; do
            # Derive an app name: prefer folder name, convert slashes to dashes
            APP_NAME=$(basename "$d")
            echo "Attempting to sync ArgoCD Application: $APP_NAME"
            argocd app sync "$APP_NAME" || echo "app $APP_NAME sync failed or not found"
            argocd app wait "$APP_NAME" --timeout 120 || true
          done

      - name: Cleanup
        if: always()
        run: |
          kill $PF_PID || true
          rm -f kubeconfig.yaml || true
