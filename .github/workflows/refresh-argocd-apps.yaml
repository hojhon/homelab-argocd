name: Refresh ArgoCD apps

on:
  workflow_dispatch:

jobs:
  refresh-argocd:
    runs-on: [self-hosted, dev-ops]
    environment: homelab-variables
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubeconfig
        run: |
          if [ -f "/home/github-runner/.kube/config" ]; then
            echo "KUBECONFIG=/home/github-runner/.kube/config" >> $GITHUB_ENV
          elif [ -f "/etc/rancher/k3s/k3s.yaml" ]; then
            cp /etc/rancher/k3s/k3s.yaml kubeconfig.yaml
            chmod 600 kubeconfig.yaml
            echo "KUBECONFIG=$(pwd)/kubeconfig.yaml" >> $GITHUB_ENV
          else
            echo "No kubeconfig found on runner" >&2
            exit 1
          fi

      - name: Install ArgoCD CLI
        run: |
          echo "Installing ArgoCD CLI..."
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          rm argocd-linux-amd64

      - name: Port-forward argocd-server
        run: |
          kubectl --kubeconfig="$KUBECONFIG" port-forward -n argocd svc/argocd-server 8080:443 --address 127.0.0.1 > /dev/null 2>&1 &
          PF_PID=$!
          for i in 1 2 3 4 5; do
            sleep 2
            if nc -z 127.0.0.1 8080 >/dev/null 2>&1; then
              break
            fi
          done

      - name: Login to ArgoCD
        run: |
          set -e
          ARGOCD_SERVER=127.0.0.1:8080
          ADMIN_PW=$(kubectl --kubeconfig="$KUBECONFIG" -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' 2>/dev/null | base64 --decode || true)
          if [ -z "$ADMIN_PW" ]; then
            ADMIN_PW=${{ secrets.ARGOCD_ADMIN_PASSWORD }}
          fi
          if [ -z "$ADMIN_PW" ]; then
            echo "No ArgoCD admin password available" >&2
            kill $PF_PID || true
            exit 1
          fi
          argocd login $ARGOCD_SERVER --insecure --username admin --password "$ADMIN_PW"

      - name: Sync root application
        run: |
          argocd app sync root-application || true
          argocd app wait root-application --timeout 120

      - name: Clean up
        if: always()
        run: |
          kill $PF_PID || true
          rm -f kubeconfig.yaml || true
